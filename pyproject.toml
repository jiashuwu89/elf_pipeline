[tool.poetry]
name = "refactor"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]

# https://stackoverflow.com/questions/60580113/change-python-version-to-3-x
# TODO: Clean this up
[tool.poetry.dependencies]
python = "3.8.*"
astropy = "^4.0.1"
pandas = "1.1.4"  # Pinned to avoid deprecation warnings concerning `apply`
paramiko = "^2.7.2"
sqlalchemy = "^1.3.19"
spacepy = "^0.2.1"
elfin-ops-libs = "^2.4.0"
pytest = "^6.0.2"
sphinx_rtd_theme = "^0.5.0"
elfin-sp-libs = "^0.1.2"
gitpython = "^3.1.11"
intervaltree = "^3.1.0"
scipy = "1.6.3"  # Pinned to avoid poetry problems
numpy = "1.19.4"  # Pinned for consistent results from function `handle_adjacent_sectors`

[tool.poetry.dev-dependencies]
black = "^22.3.0"
Sphinx = "^3.2.1"
flake8 = "^3.8.3"
isort = "^5.5.4"
mypy = "^0.940"
coverage = {extras = ["toml"], version = "^5.3"}
types-python-dateutil = "^2.8.10"

[[tool.poetry.source]]
name = "elfin"  # This name will be used in the configuration to retreive the proper credentials
url = "http://git.elfin.ucla/api/v4/projects/5/packages/pypi/simple"  # URL used to download your packages from

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pylint.message_control]
disable = [
    "invalid-name",
    "logging-fstring-interpolation",
    "logging-not-lazy",
    "fixme",
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "bad-continuation",
    "broad-except",
    "comparison-with-callable",
    "too-few-public-methods",
    "locally-disabled"
]

[tool.pylint.typecheck]
generated-members = [
    "models.Categorical.*",
    "models.Event.*",
    "models.ScienceDownlink.*",
    "models.Packet.*",
    "models.Intent.*",
    "models.SciencePacket.*",
    "models.BmonData.*",
    "pd.DatetimeIndex"
]

[tool.pylint.format]
max-line-length = 120

[tool.pylint.reports]
reports = "yes"
output-format = "text"

[tool.coverage.run]
dynamic_context = "test_function"

[tool.coverage.html]
show_contexts = true

[tool.coverage.report]
precision = 2
skip_empty = true
exclude_lines = [
    "pragma: no cover",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__",
]

[tool.pytest.ini_options]
markers = [
    "integration: marks an integration test (deselect with '-m \"not integration\"')",
    "serial",
]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
